
// Find the maximum
function maxOfTwoNumbers(a,b){
  if (a>b){
    return a;
  } else {
    return b;
  }
}

// Finding Longest Word
var words = [
  'mystery',
  'brother',
  'aviator',
  'crocodile',
  'pearl',
  'orchard',
  'crackpot'
];
function findLongestWord (a){
  var longitud = 0, posicion = 0;
  for (var i=0; i<a.length; i++){
    if (a[i].length>longitud){
      longitud = a[i].length;
      posicion=i;
    }
  }
  return a[posicion];
}

// Calculating a Sum

var numbers = [6, 12, 1, 18, 13, 16, 2, 1, 8, 10];

function sumArray(a){
  var resultado=0;
  for (var i=0; i<a.length; i++){
    resultado += a[i];
  }
  return resultado;
}

// // Calculate the Average

var numbersAvg = [2, 6, 9, 10, 7, 4, 1, 9];
function averageNumbers(a) {
  if (a.length==0){
    return undefined;
  } else {
  return (sumArray(a)/a.length);
  }
}

// // Array of Strings
var wordsArr = [
  'seat',
  'correspond',
  'linen',
  'motif',
  'hole',
  'smell',
  'smart',
  'chaos',
  'fuel',
  'palace'
];

function averageWordLength(a){
  resultado = 0;
  if (a.length==0){
    return undefined;
  } else {
  for (var i=0; i<a.length;i++){
    resultado += a[i].length;
  }
  return resultado/a.length;
  }
}

// Unique Arrays
var wordsUnique = [
  'crab',
  'poison',
  'contagious',
  'simple',
  'bring',
  'sharp',
  'playground',
  'poison',
  'communion',
  'simple',
  'bring'
];

function uniquifyArray(a){
  var resultado = [];
  if (a.length===0){
    return undefined; 
  }
 for (var i=0; i<a.length; i++){
   if (resultado.indexOf(a[i]) === -1){
     resultado.push(a[i]);
   }
 }
  return resultado;
}

// Finding Elements
var wordsFind = [
  'machine',
  'subset',
  'trouble',
  'starting',
  'matter',
  'eating',
  'truth',
  'disobedience'
];

function doesWordExist(a,p){
  for(var i=0; i<a.length; i++){
    if (a[i]===p){
      return true;
    }
  }
  return false;
}



// Counting Repetion
var wordsCount = [
  'machine',
  'matter',
  'subset',
  'trouble',
  'starting',
  'matter',
  'eating',
  'matter',
  'truth',
  'disobedience',
  'matter'
];

function howManyTimes(a,p){
  var resultado=0;
  if (a.length===0){
    return false;
  }
  for(var i=0; i<a.length; i++){
    if (a[i]===p){
      resultado++;
    }
  }
  return resultado;

}
